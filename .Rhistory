source(pathtofile("myLabels.R"), local = TRUE))
source(pathtofile("myLabels.R"), local = TRUE)
xyplot( price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
aablin
abline(h = 0.4, col  = "red")
5
abline(h = 0.05, col  = "red")
12
abline(h = 0.05, col  = "green")
dist(dFsm)
play()
l
y <- function(x) { sin(x) + sin(2*x) + 3 * sin(4*x) }
?rep
a <- seq()
?seq
a <- seq (1, 10, by = 0.1)
b <- y(a)
plot(b, a, type = "l")
plot(a, b, type = "l")
a <- seq (1, 40, by = 0.1)
a <- seq (1, 40, by = 0.1)
b <- y(a)
plot(a, b, type = "l")
?seq.Date
?seq_along
len (b)
length (b)
a <- seq (0, 40, by = 0.1)
b <- y(a)
length (b)
d <- seq.Date(from = 1970-1-1, by = 1, along.with = b)
d <- seq.Date(from = as.date("1970-1-1"), by = 1, along.with = b)
d <- seq.Date(from = as.Date("1970-1-1"), by = 1, along.with = b)
d
t <- cbind(d,b)
head(t)
t <- data.frame(d,b)
t
?ts
ts(data =  b,  start = as.Date("2000-01-01"), deltat = 1/12)
plot(ts)
str(ts)
g <- ts(data =  b,  start = as.Date("2000-01-01"), deltat = 1/12)
plot(g)
library(forecast)
arima(g)
plot(arima(g))
n <-arima(g)
n
str()
str(n)
g <- auto.arima(g, h = 24)
g <- auto.arima(g)
str(g)
forecast.ar(g, 24)
forecast.ar(g, h = 24)
library(swirl)
ls()
rm(list = ls())
ls()
swirl()
strs(diamonds)
str(diamonds)
0
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
info()
info()
info()
info()
info()
skip()
skip()
info()
info()
info()
skip()
skip()
skip()
info()
info()
skip()
info()
info()
info()
skip()
skip()
skip()
skip()
swirl()
2
swirl()
swirl()
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
hc
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = .4, col = "red")
5
12
abline(h = .05, col = "green")
dFsm
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(dataMatrix)
heatmap((mt))
heatmap(mt)
mt
plot(denmt)
distmt
cmar
cmat
points(cx, cy, col = c("red", "orange", "purple", pch 3, cex = 2, lwd = 2))
points(cx, cy, col = c("red", "orange", "purple", pch = 3, cex = 2, lwd = 2))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist
distTmp <- matrix(NA,nrow=3,ncol=12)
distTmp
mdist(x,y, cx,cy)
apply(distTmp, 2, which,min)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
x
newClust
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y, newCx,newCy)
apply(distTmp2,2,which.min)
points(newCx, newCy, col = cols1[newClust2], pch = 19, cex = 2, lwd = 2)
points(x, y, col = cols1[newClust2], pch = 19, cex = 2, lwd = 2)
points(x, y, col = cols1[newClust2], pch = 19,
cex = 2, lwd = 2)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
points(finalCx, finalCy, col = cols1, pch =
)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y,col=kmObj$ckuster, pch=19, cex=2)
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col = c("black", "red", "green", pch = 3, cex = 3, lwd = 3))
points(kmObj$centers, col = c("black", "red", "green", pch = 3, cex = 3, lwd = 3)
_)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPart.R, local = TRUE)
)
""
)
"""
source("addPart.R", local = TRUE)
source("addPatt.R", local = TRUE)
heamat(dataMatrix)
heamap(dataMatrix)
heatmap(dataMatrix)
prev()
info()
bye()
swirl()
bye()
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
dataMatrix()
dataMatrix
dataMatrix
hclust(dataMatrix)
hClust(dataMatrix)
d <- dist(dataMatrix)
d
hclust(d)
x <- hclust(d)
str(x)
plot(x)
heatmap(dataMatrix)
mat
svd(mat)
diag
matu %*% diag %*% t(matv)
bye()
swirl()
library(swirl)
swirl()
dim(pm0)
head(pm04)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = T)
cnames
next()
nxt()
cnames <- strsplit(cnames, "|", fixed = TRUE)
nxt()
nxt()
paste(cnames, "|")
cnames
paste(cnames)
cnames <- strsplit(cnames, "|", fixed = TRUE)
n <- cnames
cnames <- "lk"
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
cnames <- n
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
l
help()
hlp()
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
class(cnames)
str(cnames)
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1)
)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1 <- 0
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
head(negative)
str(negative)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
dates[negative]
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
head(cnt1)
library(swirl)
sweep()
sw
swirl()
pm0sub <- subset(cnt0, County.Code == 63 & SiteID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
library(swirl)
swirl()
x0sub <- pm0sub.Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
head(x0sub)
dates0 <- as.Date(as.character(pm0sub$Date), %Y%m%d)
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow(1, 2))
par(mfrow = c(1, 2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(y = median(x0sub, na.rm = TRUE), lwd = 2)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn0
length(unique(pm0$State.Code))
str(mn0)
mn1 <- with(pm1 tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2]), xlim = c(.5, 2.5))
with(mrg, plot(rep(1,52), mrg[,2]), xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seed(3435)
train <- rbinom(4601, size = 1, .5)
?rbinom
head (train)
x <- rbinom(20, size = 55, .5)
x
length(x)
mean(x)
55/2
range(x)
table(train)
indicator <- train
head(spam)
names(spam)
train <- spam[indicator == 1, ]
test <- spam[indicator == 0, ]
names(train)
head(train)
table(train$type)
plot(train$capitalAve ~ train$type)
plot(log10(train$capitalAve) ~ train$type)
plot(log10(train[, 1:4] + 1))
p <- hclust(dist(t(train[1:57])))
t(train[1:2])
head(t(train[1:2]))
head(t(train[1:2]))
t
str(t)
u <- t
t <- NULL
head(t(train[1:2]))
plot(p)
dist(train[, 1:2])
plot(hclust(dist))
n <- dist(train[, 1:2])
plot(hclust(N))
plot(hclust(n))
a <- dist(t(log10(train[, 1:55] + 1)))
hclust("", a)
hclust(a)
plot(hclust(a))
t(rand(5))
t(rnorm(5))
?t
?predict
library(swirl)
swirl()
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
mean(rnorm(100))
plot(hist(data$steps))
plot(hist(data$steps))
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
plot(hist(data$steps))
head(data)
setwd("D:/Stats/Coursera Data Science/assignments/knitr1/RepData_PeerAssessment1")
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
head(data)
unique(steps$interval)
unique(data$interval)
length(unique(data$interval))
head(data)
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
daily$day <- unique(data$date)
daily <- data.frame
daily$day <- unique(data$date)
daily$day <- 2
daily <- data.frame(steps = numeric())
daily
daily <- data.frame(steps = numeric(), day = date())
daily <- data.frame(steps = numeric(), day = as.POSIXct())
daily = data.frame()
daily
daily$l = f
daily$l = 3
daily = data.frame(h = numeric())
daily <- data.frame(date, steps)
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
daily <- data.frame(date, steps)
daily$j <
)
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
daily <- data.frame(date, steps)
daily <- data.frame(date = date(), steps = numeric())
daily <- data.frame(date = date, steps = numeric())
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
daily <- data.frame(date = as.Date(character()), steps = numeric())
daily$date <- unique(data$date)
steps <- aggregate(data$steps, by = list(data$date), sum)
head(steps)
dailysteps <- aggregate(data$steps, by = list(data$date), sum)
class(dailysteps)
dailysteps <- aggregate(data$steps, by = list(data$date), sum)
names(dailysteps) <- c(date, steps)
?names
names(dailysteps) <- c("date", "steps")
dailysteps
interval <- aggregate(data$steps, by = list(data$interval), mean)
names(interval <- c("interval", "steps"))
interval
t
range(data$interval)
length(data[interval == 2355]))
length(data[interval == 2355])
data[interval == 2355]
data[data$interval == 2355]
data$interval[data$interval == 2355]
unique(data$interval)
str(data)
interval <- aggregate(data$steps, by = list(data$interval), mean)
head(interval)
interval
interval <- aggregate(data$steps, by = list(data$interval), mean, na.action = na.omit)
head(interval)
interval
interval <- aggregate(data$steps, by = list(data$interval), mean, na.action = na.pass)
interval
?aggregate
interval <- aggregate(data$steps, by = list(data$interval), mean, na.rm = TRUE)
interval
?strptime
a <- strptime(interval$Group.1, %k)
formatC(anim, width = 6, format = "d", flag = "0")
interval <- aggregate(data$steps, by = list(data$interval), mean, na.rm = TRUE)
cbind(interval, formatC(interval$interval, width = 4, format = "d", flag = "0"))
interval
interval <- aggregate(data$steps, by = list(data$interval), mean, na.rm = TRUE)
names(interval) <- c("interval", "steps")
interval$interval <- formatC(interval$interval, width = 4, format = "d", flag = "0"))
interval$interval <- formatC(interval$interval, width = 4, format = "d", flag = "0")
head(interval)
a <- strptime(interval$interval, %k)
a <- strptime(interval$interval, format = "%k")
a
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
daily <- aggregate(data$steps, by = list(data$date), sum)
names(daily) <- c("date", "steps")
interval <- aggregate(data$steps, by = list(data$interval), mean, na.rm = TRUE)
names(interval) <- c("interval", "steps")
a <- strptime(interval$interval, %k)
a <- strptime(interval$interval, "%k")
a
interval$interval <- formatC(interval$interval, width = 4, format = "d", flag = "0")
a <- strptime(interval$interval, "%k")
a
a <- strptime(paste(" ", interval$interval), "%k")
a
?formatC
?strptime
data <- read.csv(unz("activity.zip", "activity.csv"), header=TRUE)
daily <- aggregate(data$steps, by = list(data$date), sum)
names(daily) <- c("date", "steps")
interval <- aggregate(data$steps, by = list(data$interval), mean, na.rm = TRUE)
names(interval) <- c("interval", "steps")
interval$interval <- formatC(interval$interval, width = 4, format = "d", flag = "0")
interval$interval <-  sub("([[:digit:]]{2,2})$", ":\\1", interval$interval)
head(interval$interval)
a <- strptime(paste(" ", interval$interval), "%k")
a
a <- strptime(interval$interval, "%k")
a
interval <- aggregate(data$steps, by = list(data$interval), mean, na.rm = TRUE)
names(interval) <- c("interval", "steps")
interval$interval <- formatC(interval$interval, width = 4, format = "d", flag = "0")
a <- strptime(interval$interval, "%H%M")
a
